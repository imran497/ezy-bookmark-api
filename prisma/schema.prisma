// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String @id @default(cuid())
  clerkId     String @unique
  username    String @unique
  email       String?
  firstName   String?
  lastName    String?
  profileUrl  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  bookmarks   Bookmark[]
  clickEvents ClickEvent[]

  @@map("users")
}

model Tool {
  id          String   @id @default(cuid())
  name        String
  description String
  url         String   @unique
  category    String
  tags        String[]
  favicon     String?
  addedBy     String?
  usageCount  Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  bookmarks   Bookmark[]
  clickEvents ClickEvent[]

  // Indexes for performance
  @@index([category])
  @@index([usageCount])
  @@index([createdAt])
  @@map("tools")
}

model Bookmark {
  id        String   @id @default(cuid())
  userId    String
  toolId    String
  isPinned  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [clerkId], onDelete: Cascade)
  tool Tool @relation(fields: [toolId], references: [id], onDelete: Cascade)

  // Ensure unique bookmark per user per tool
  @@unique([userId, toolId])
  @@index([userId])
  @@index([toolId])
  @@index([isPinned])
  @@map("bookmarks")
}

model ClickEvent {
  id        String   @id @default(cuid())
  toolId    String
  userId    String?
  timestamp DateTime @default(now())
  userAgent String?
  referer   String?

  // Relations
  tool Tool  @relation(fields: [toolId], references: [id], onDelete: Cascade)
  user User? @relation(fields: [userId], references: [clerkId], onDelete: SetNull)

  // Indexes for analytics queries
  @@index([toolId])
  @@index([userId])
  @@index([timestamp])
  @@map("click_events")
}